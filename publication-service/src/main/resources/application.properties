# keycloak.url is set by DevServices for Keycloak
keycloak.url=http://localhost:8484/auth
mp.jwt.verify.publickey.location=http://localhost:8484/auth/realms/foodio/protocol/openid-connect/certs
mp.jwt.verify.issuer=http://localhost:8484/auth/realms/foodio
quarkus.oidc.client-id=default
quarkus.oidc.auth-server-url=http://localhost:8484/auth/realms/foodio
quarkus.oidc.roles.role-claim-path=realm_access/roles,resource_access/default/roles

%dev.quarkus.http.port=9000
quarkus.log.category."io.vertx".min-level=TRACE
# configure the mongoDB client for a single instance on localhost
%dev.quarkus.mongodb.connection-string = mongodb://localhost:30000/?uuidRepresentation=STANDARD
# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = publication

# Configure the incoming `publication-requests` Kafka topic
mp.messaging.incoming.publication-create-requests.topic=publication-create-requests-channel
mp.messaging.incoming.publication-create-requests.auto.offset.reset = earliest

mp.messaging.incoming.publication-update-requests.topic=publication-update-requests-channel
mp.messaging.incoming.publication-update-requests.auto.offset.reset = earliest


mp.messaging.incoming.order-create-requests.topic=order-create-requests-channel
mp.messaging.incoming.order-accept-requests.topic=order-accept-requests-channel

mp.messaging.incoming.order-create-requests.auto.offset.reset = earliest
mp.messaging.incoming.order-accept-requests.auto.offset.reset = earliest
#
#mp.messaging.incoming.orders-update-requests.auto.offset.reset = earliest
#mp.messaging.incoming.orders-update-requests.connector=smallrye-kafka

#%dev.kafka.bootstrap.servers=localhost:19092
